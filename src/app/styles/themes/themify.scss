@import 'themes.scss';

// mixin to generate css for different themes
@mixin themify($themes: $themes) {
  @each $theme, $map in $themes {

	// :host-context() additionally needed to break from angular style isolation
    .theme-#{$theme} &, :host-context(.theme-#{$theme}) & {
      $theme-map: () !global; // Theme map used in themed function
      @each $key, $value in $map {
        $theme-map: map-merge($theme-map, ($key: $value)) !global;
      }

	  @content;
	  
      $theme-map: null !global; // Reset theme map
    }
  }
}

// Function to get value from global theme map (defined in themify)
@function themed($key) {
  @return map-get($theme-map, $key);
}

// Example:
// .button {
//		padding: 10px;
//		@include themify($themes) {
//			background-color: themed('buttonBackgroundColor');
//		}
// }